version: '3.8'

services:
  # Product Service Application
  product-service:
    build: ./ProductService
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://product_db:5432/product_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
    depends_on:
      - product_db

  # Order Service Application
  order-service:
    build: ./OrderService
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order_db:5432/order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
    depends_on:
      - order_db

  # PostgreSQL Database for Product Service
  product_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5433:5432"
    volumes:
      - product_db_data:/var/lib/postgresql/data
      - ./db-init/init_product_db.sql:/docker-entrypoint-initdb.d/init_product_db.sql

  # PostgreSQL Database for Order Service
  order_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5434:5432"
    volumes:
      - order_db_data:/var/lib/postgresql/data

  frontend:
    build: ./frontend
    ports:
      - "3000:80"  # Map port 3000 on your host to port 80 in the container
    depends_on:
      - product-service
      - order-service

volumes:
  product_db_data:
  order_db_data:
